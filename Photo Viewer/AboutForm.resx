<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UABpoACI7VAAaaAAiO1QAGmgAIjtUABpoACI7VAAaaAAiO1QAGmgAIjtUABpoACI7VAAaaAAiO1QAGmg
        AIjtUABpoACI7VAAaaAAiO1QAGmgAIjtUABpoACI7VAAaaAAiO1QAGmgAIjtUABpSAjgPun+0KXSc/aQ
        nNBj1rskUnE1IYF01xuC+pw72aAHzu2zy79DAfgxaFK99J08T3pOu016Tfte1uk59fty7qxPyMWP3Ch9
        59xMyBn0n3eT9Hn4QzgHv+N7DnWWntO+JW994G4IIOZbA21htQCUgRNr5LIJtTlhwIQ6GfzAJil/fq1U
        1ayTNVsIeZNNzjp5et1aGT59vVwyPuZ7DmWFiVHfc789WC8A5YpJJmdcMr5GhpfF5J//isn2upjU1hAS
        k+bamERNTL4wJyZvvz/qe+5ki8vj+J/7bVEUAsglugMvHu/I1Q86suBFIy3urclJ8dIQMxgQjHy0InGL
        Or/zplCgALKE3pD0fdMceQEHvpkSKEocoMVfg4+fedhI3wxv1NkVUABZQnek2l4lsHA1JVCMaPGv2pQo
        /kIf+T0ogCyj92Z/r9sJcDpQHJw28j9kpE8IRn4PCiDLJHcCuiawlRKwHm/OH6aR34MCyBEXoRPQhcGV
        G9kJ2IqO/I0o/monseAXhjl/KhRADrl4AjsBmwnzyO9BAeSY0zqBOv8TiYQLG0Z+DwogD+jrBG4qd2TR
        msSJ43dSkfCgI//qV4z85zwTv/zrd8zDAgWQJ7RFHDLZkaXrjGxjJxBKdORvwlTuX1VGPjDDkX4hHvk9
        KIA8wk4g3OjIvwYj/5fmmvjlXr9jHDYogDyiO5udQPiwceT3CIUABkMAuqG2oFcHbpruyJPoBHh1oPDR
        4vdGfp3z+x3TsDIIDJzonChYAZw/ztkNUx1XS9kEWsjjeF4nH11lDuyoN9uaYqa1xphWnHCkQKiPmtad
        9Wbnyo2mFVO3k33u8z+WYQbFf3zABOdoYQoAdCtxanTjbKMHgOAazr7beeHL88zN6AbeVh8zfTDa9MHJ
        R7oQzPX7tNSZPis2mvNuX2gG9b3XPBoZ42zVY+Z3LC0g6ld7oOsF4KJmspOxTl1kpLO+e4m52t0bTIHk
        rfeY3jg2T6L4G32PnV341V3BCMB2toJlkVFmqLtHmK7OKHNBZKypwHHZnnScig0KIE+ogZvAK5ESc527
        V5iuylhzIY7FEtAC/I5XsUAB5JlEJ1DKTqDLUoqRv7ToR36PvAlgPdB5lv7CYmcbcHAS3uLuHSZfKTUD
        se+XgZ3usSh2tCbXu3snhylxKsE6oJ1AsbMaYCrgPIkTcoC7h5hcp9ScA6Ziv+t0TI+B37EpNrQmK909
        xDAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
        wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzBMJxKJ/D9N57iBe5b6xAAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>